AWSTemplateFormatVersion: "2010-09-09"
Description: This template builds the necessary lambda infra to send s3 logs to honeycomb
Parameters:
  Environment:
    Type: String
    Default: ''
    Description: Name of environment. This will be included in log events sent to Honeycomb.
  HoneycombWriteKey:
    Type: String
    Description: Your Honeycomb write key. If KMSKeyId is set, this should be a Cyphertext Blob from KMS.
  KMSKeyId:
    Type: String
    Default: ''
    Description: 'KMS Key ID used to encrypt your Honeycomb write key (ex: a80d80aa-19b5-486a-a163-a4502b5555)'
  HoneycombAPIHost:
    Type: String
    Default: https://api.honeycomb.io
    Description: Optional. Altenative Honeycomb API host.
  HoneycombDataset:
    Type: String
    Default: s3-logs
    Description: Target honeycomb dataset
  HoneycombSampleRate:
    Type: Number
    Default: 1
    Description: Sample rate. See https://honeycomb.io/docs/guides/sampling/.
  S3BucketName:
    Type: String
    Description: The BucketName to watch for events on
  TimeFieldName:
    Type: String
    Default: ''
    Description: Name of the field that contains a timestamp
  TimeFieldFormat:
    Type: String
    Default: ''
    Description: Timestamp format to use, if TimeFieldName is set. (strftime and Golang time.Parse supported)
  LambdaMemorySize:
    Type: Number
    Default: 256
    Description: Memory allocated to the Lambda function. Must be >= 128 and a multiple of 64. Increases this also increases CPU proportionally.
  MatchPatterns:
    Type: String
    Description: Comma-separated simple regexes to specify which s3 keys to match.
    Default: '.*'
  FilterPatterns:
    Type: String
    Description: Comma-separated simple regexes to specify which s3 keys to exclude.
    Default: ''
  ErrorDataset:
    Type: String
    Default: ''
    Description: If set, write error events such as parsing errors to this dataset. Can be the same as your primary dataset.
  BufferSize:
    Type: String
    Default: '65536'
    Description: Can be used to override the default scan buffer size of 64KiB. If you get token too long errors, set this to the maximum size of your individual log lines.
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Required Parameters
        Parameters:
          - S3BucketName
          - HoneycombWriteKey
          - HoneycombDataset
          - HoneycombSampleRate
      - Label:
          default: Optional Parameters
        Parameters:
          - MatchPatterns
          - FilterPatterns
          - LambdaMemorySize
          - Environment
          - KMSKeyId
          - ErrorDataset
          - TimeFieldName
          - TimeFieldFormat
          - HoneycombAPIHost
Conditions:
  EncryptionEnabled: !Not [!Equals [!Ref KMSKeyId, '']]
Resources:
  S3LambdaHandler:
    Type: "AWS::Lambda::Function"
    Properties:
      Code:
        S3Bucket: 
          "Fn::Join":
          - '-'
          -
            - honeycomb-integrations
            - !Ref "AWS::Region"
        S3Key: agentless-integrations-for-aws/LATEST/ingest-handlers.zip
      Description: Lambda function for sending s3 logs to Honeycomb
      Environment:
        Variables:
          ENVIRONMENT: !Ref Environment
          PARSER_TYPE: json
          HONEYCOMB_WRITE_KEY: !Ref HoneycombWriteKey
          KMS_KEY_ID: !Ref KMSKeyId
          API_HOST: !Ref HoneycombAPIHost
          DATASET: !Ref HoneycombDataset
          SAMPLE_RATE: !Ref HoneycombSampleRate
          TIME_FIELD_NAME: !Ref TimeFieldName
          TIME_FIELD_FORMAT: !Ref TimeFieldFormat
          MATCH_PATTERNS: !Ref MatchPatterns
          FILTER_PATTERNS: !Ref FilterPatterns
          ERROR_DATASET: !Ref ErrorDataset
          BUFFER_SIZE: !Ref BufferSize
      FunctionName:
        "Fn::Join":
          - '-'
          -
            - S3LambdaHandler
            - !Ref "AWS::StackName"
      Handler: s3-handler
      MemorySize: !Ref LambdaMemorySize
      Role:
        "Fn::GetAtt":
          - LambdaIAMRole
          - Arn
      Runtime: go1.x
      # s3 logs can be large, so allow for more runtime
      Timeout: 300
  ExecutePermission:
    Type: "AWS::Lambda::Permission"
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName:
        "Fn::GetAtt":
          - S3LambdaHandler
          - Arn
      Principal: 's3.amazonaws.com'
  LambdaIAMRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"
  LambdaLogPolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: "lambda-create-log"
      Roles:
          - Ref: LambdaIAMRole
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource: 'arn:aws:logs:*:*:*'
  LambdaKMSPolicy:
    Type: "AWS::IAM::Policy"
    Condition: EncryptionEnabled
    Properties:
      PolicyName: "lambda-kms-decrypt"
      Roles:
          - Ref: LambdaIAMRole
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - kms:Decrypt
            Resource:
              "Fn::Join":
                - ''
                -
                  - arn:aws:kms:*:*:key/
                  - !Ref KMSKeyId
  LambdaS3Policy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: "lambda-s3-getobject"
      Roles:
          - Ref: LambdaIAMRole
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - s3:GetObject
            Resource:
              "Fn::Join":
                - ''
                -
                  - 'arn:aws:s3:::'
                  - !Ref S3BucketName
                  - /*
